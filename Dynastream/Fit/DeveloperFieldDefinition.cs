#region Copyright
////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2017 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 20.54Release
// Tag = production/akw/20.54.00-0-ga49a69a
////////////////////////////////////////////////////////////////////////////////

#endregion

using System;

namespace Dynastream.Fit
{
    /// <summary>
    /// Represents a Developer Field Definition
    /// </summary>
    internal class DeveloperFieldDefinition
    {
        private readonly FieldDescriptionMessage m_descriptionMessage;
        private readonly DeveloperDataIdMessage m_developerIdMessage;

        /// <summary>
        /// Gets a boolean indicating if the Field Definition has associated meta
        /// data
        /// </summary>
        public bool IsDefined
        {
            get { return !ReferenceEquals(m_descriptionMessage, null); }
        }

        /// <summary>
        /// Gets the Field Number associated with the Developer Field
        /// </summary>
        public byte FieldNum { get; private set; }

        /// <summary>
        /// Gets the Number of bytes associated with the Developer Field
        /// </summary>
        public byte Size { get; private set; }

        /// <summary>
        /// Gets the developer index of the Developer Field
        /// </summary>
        public byte DeveloperDataIndex { get; private set; }

        /// <summary>
        /// Gets the current description message for the field
        /// </summary>
        internal FieldDescriptionMessage DescriptionMessage
        {
            get { return m_descriptionMessage; }
        }

        /// <summary>
        /// Gets the Associated Developer Id for the message
        /// </summary>
        internal DeveloperDataIdMessage DeveloperIdMessage
        {
            get { return m_developerIdMessage; }
        }

        public DeveloperFieldDefinition(byte fieldNum, byte size, byte developerDataIndex)
        {
            m_descriptionMessage = null;
            FieldNum = fieldNum;
            Size = size;
            DeveloperDataIndex = developerDataIndex;
        }

        /// <summary>
        ///
        /// </summary>
        /// <param name="desc"></param>
        /// <param name="devId"></param>
        /// <param name="size"></param>
        /// <exception cref="InvalidOperationException">
        ///     If description parameter is invalid
        /// </exception>
        public DeveloperFieldDefinition(FieldDescriptionMessage desc, DeveloperDataIdMessage devId, byte size)
        {
            byte? fieldDefinitionNumber = desc.GetFieldDefinitionNumber();
            byte? developerDataIndex = desc.GetDeveloperDataIndex();
            if ((developerDataIndex != null) &&
                (fieldDefinitionNumber != null))
            {
                m_descriptionMessage = desc;
                m_developerIdMessage = devId;
                Size = size;
                FieldNum = (byte)fieldDefinitionNumber;
                DeveloperDataIndex = (byte)developerDataIndex;
            }
            else
            {
                throw new FitException("Description Message must have a valid developer data index and field definition number");
            }
        }
    }
}
